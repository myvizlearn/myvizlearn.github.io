{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login.service.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,u6B;;;;;;;;;;;;;;;;;;ACCqD;AACV;AAK3C;IAEE,sBAAoB,gBAAiC;QAAjC,qBAAgB,GAAhB,gBAAgB,CAAiB;IAAI,CAAC;IAE1D,kCAAW,GAAX,UAAY,WAA4B;QACtC,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,0BAA0B,CAC1D,WAAW,CAAC,KAAK,EACjB,WAAW,CAAC,QAAQ,CACrB,CAAC;IACJ,CAAC;;gBAPqC,kEAAe;;IAF1C,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAGsC,kEAAe;OAF1C,YAAY,CAUxB;IAAD,mBAAC;CAAA;AAVwB;;;;;;;;;;;;;;;;;;;;;;;ACPgB;AACM;AACmB;AACX;AAEV;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAYF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAV3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,kEAAmB;gBACnB,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;AC1B5B,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;ACAtB;AACS;AAEA;AACkB;AAOpE;IAGE,mBAAY,WAAwB,EAAU,aAA2B,EAAU,OAAe;QAApD,kBAAa,GAAb,aAAa,CAAc;QAAU,YAAO,GAAP,OAAO,CAAQ;QAEhG,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACtC,CAAC;IACJ,CAAC;IAED,4BAAQ,GAAR;IACA,CAAC;IAED,yBAAK,GAAL;QAAA,iBAUC;QATC,IAAM,eAAe,GAAoB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,eAAe,CAAC;aAC9C,IAAI,CAAC,UAAC,QAAQ;YACb,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,0BAA0B;QAC1B,0CAA0C;QAC1C,MAAM;IACR,CAAC;;gBArBwB,0DAAW;gBAAyB,2DAAY;gBAAmB,sDAAM;;IAHvF,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;YACrB,uIAAgC;;SAEjC,CAAC;+EAIyB,0DAAW,EAAyB,2DAAY,EAAmB,sDAAM;OAHvF,SAAS,CA0BrB;IAAD,gBAAC;CAAA;AA1BqB","file":"login-login-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n          Login\\n      </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-content>\\n      <form [formGroup] =\\\"loginFormGroup\\\">\\n      <ion-item>\\n        <ion-label>Email</ion-label>\\n        <ion-input formControlName=\\\"email\\\" type=\\\"email\\\"></ion-input>\\n        \\n      </ion-item>\\n      <ion-item>\\n          <ion-label>Password</ion-label>\\n          <ion-input formControlName=\\\"password\\\" type=\\\"password\\\"></ion-input>\\n          \\n        </ion-item>\\n        \\n        <ion-button [disabled]=\\\"loginFormGroup.invalid\\\" margin-top (click)=\\\"login()\\\">Login</ion-button>\\n        <ion-button margin-top >Register</ion-button>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\\n\"","import { LoginCredential } from './interfaces';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private _angularFireAuth: AngularFireAuth) { }\n\n  loginMethod(credentials: LoginCredential): Promise <any> {\n    return this._angularFireAuth.auth.signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { Router } from '@angular/router';\nimport { LoginService } from './../login.service';\nimport { LoginCredential } from './../interfaces';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  loginFormGroup: FormGroup;\n  constructor(FormBuilder: FormBuilder, private _loginService: LoginService, private _router: Router) { \n    \n    this.loginFormGroup = FormBuilder.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  login() {\n    const loginCredential: LoginCredential = this.loginFormGroup.value;\n    this._loginService.loginMethod(loginCredential)\n    .then((authData) => {\n      console.log(authData);\n      this._router.navigate(['/home']);\n    });\n    // .catch((authError) => {\n    //   console.log('Auth Error', authError);\n    // });\n  }\n\n}\n"],"sourceRoot":""}