{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login.service.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;AAAA,o7B;;;;;;;;;;;;;;;;;;ACCqD;AACV;AAK3C,IAAa,YAAY,GAAzB,MAAa,YAAY;IAEvB,YAAoB,gBAAiC;QAAjC,qBAAgB,GAAhB,gBAAgB,CAAiB;IAAI,CAAC;IAE1D,WAAW,CAAC,WAA4B;QACtC,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,0BAA0B,CAC1D,WAAW,CAAC,KAAK,EACjB,WAAW,CAAC,QAAQ,CACrB,CAAC;IACJ,CAAC;CACF;;YARuC,kEAAe;;AAF1C,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;2EAGsC,kEAAe;GAF1C,YAAY,CAUxB;AAVwB;;;;;;;;;;;;;;;;;;;;;;;ACPgB;AACM;AACmB;AACX;AAEV;AAEJ;AAEzC,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAYF,IAAa,eAAe,GAA5B,MAAa,eAAe;CAAG;AAAlB,eAAe;IAV3B,8DAAQ,CAAC;QACR,OAAO,EAAE;YACP,kEAAmB;YACnB,4DAAY;YACZ,0DAAW;YACX,0DAAW;YACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;SAC9B;QACD,YAAY,EAAE,CAAC,qDAAS,CAAC;KAC1B,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;;;AC1B5B,+DAA+D,mI;;;;;;;;;;;;;;;;;;;;;ACAf;AACP;AACS;AAEA;AACkB;AAOpE,IAAa,SAAS,GAAtB,MAAa,SAAS;IAGpB,YAAY,WAAwB,EAAU,aAA2B,EAAU,OAAe,EAAS,QAAwB;QAArF,kBAAa,GAAb,aAAa,CAAc;QAAU,YAAO,GAAP,OAAO,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAgB;QAEjI,IAAI,CAAC,cAAc,GAAG,WAAW,CAAC,KAAK,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YAClC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;SACtC,CAAC,CAAC;QAEH,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAEzB,CAAC;IAED,QAAQ;IACR,CAAC;IAED,KAAK;QACH,MAAM,eAAe,GAAoB,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC;QACnE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,eAAe,CAAC;aAC9C,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;YACjB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;QACH,0BAA0B;QAC1B,0CAA0C;QAC1C,MAAM;IACR,CAAC;CAEF;;YA1B0B,0DAAW;YAAyB,2DAAY;YAAmB,sDAAM;YAAmB,6DAAc;;AAHxH,SAAS;IALrB,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,uIAAgC;;KAEjC,CAAC;2EAIyB,0DAAW,EAAyB,2DAAY,EAAmB,sDAAM,EAAmB,6DAAc;GAHxH,SAAS,CA6BrB;AA7BqB","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n          MyVizLearn > Login\\n      </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n\\n<ion-content>\\n  <ion-card>\\n    <ion-card-content>\\n      <form [formGroup] =\\\"loginFormGroup\\\">\\n      <ion-item>\\n        <ion-label>Email</ion-label>\\n        <ion-input formControlName=\\\"email\\\" type=\\\"email\\\"></ion-input>\\n        \\n      </ion-item>\\n      <ion-item>\\n          <ion-label>Password</ion-label>\\n          <ion-input formControlName=\\\"password\\\" type=\\\"password\\\"></ion-input>\\n          \\n        </ion-item>\\n        \\n        <ion-button [disabled]=\\\"loginFormGroup.invalid\\\" margin-top (click)=\\\"login()\\\">Login</ion-button>\\n        <ion-button margin-top >Register</ion-button>\\n      </form>\\n    </ion-card-content>\\n  </ion-card>\\n\\n</ion-content>\\n\"","import { LoginCredential } from './interfaces';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private _angularFireAuth: AngularFireAuth) { }\n\n  loginMethod(credentials: LoginCredential): Promise <any> {\n    return this._angularFireAuth.auth.signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\"","import { MenuController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { LoginService } from './../login.service';\nimport { LoginCredential } from './../interfaces';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n  loginFormGroup: FormGroup;\n  constructor(FormBuilder: FormBuilder, private _loginService: LoginService, private _router: Router, public menuCtrl: MenuController) { \n    \n    this.loginFormGroup = FormBuilder.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n\n    menuCtrl.enable(false);\n\n  }\n\n  ngOnInit() {\n  }\n\n  login() {\n    const loginCredential: LoginCredential = this.loginFormGroup.value;\n    this._loginService.loginMethod(loginCredential)\n    .then((authData) => {\n      console.log(authData);\n      this._router.navigate(['/home']);\n    });\n    // .catch((authError) => {\n    //   console.log('Auth Error', authError);\n    // });\n  }\n\n}\n"],"sourceRoot":""}