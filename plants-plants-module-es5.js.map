{"version":3,"sources":["./src/app/plants/plants.page.html","./src/app/plants/data.ts","./src/app/plants/plants.module.ts","./src/app/plants/plants.page.scss","./src/app/plants/plants.page.ts"],"names":[],"mappings":"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","file":"plants-plants-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\">\\n        <ion-menu-button></ion-menu-button>\\n      </ion-buttons>\\n      <ion-title>\\n        MyVizLearn\\n      </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content>\\n    <!-- <ion-button (click)=\\\"setSampleMap()\\\"> SetMaptoFirebase </ion-button> -->\\n    <ion-card>\\n      <ion-card-title>Plant</ion-card-title>\\n        <ion-card-header>\\n    <ngx-graph\\n      [links]=\\\"links\\\"\\n      [nodes]=\\\"nodes\\\"\\n      [autoCenter]=\\\"true\\\"\\n      [panningEnabled]=\\\"true\\\"\\n      [enableZoom]=\\\"true\\\"\\n      [autoZoom]=\\\"true\\\"\\n    >\\n      <ng-template #defsTemplate>\\n        <svg:marker\\n          id=\\\"arrow\\\"\\n          viewBox=\\\"0 -5 10 10\\\"\\n          refX=\\\"8\\\"\\n          refY=\\\"0\\\"\\n          markerWidth=\\\"4\\\"\\n          markerHeight=\\\"4\\\"\\n          orient=\\\"auto\\\"\\n        >\\n          <svg:path d=\\\"M0,-5L10,0L0,5\\\" class=\\\"arrow-head\\\" />\\n        </svg:marker>\\n      </ng-template>\\n  \\n      <ng-template #nodeTemplate let-node>\\n        <svg:g class=\\\"node\\\">\\n          <svg:rect\\n            [attr.width]=\\\"node.dimension.width\\\"\\n            [attr.height]=\\\"node.dimension.height\\\"\\n            [attr.fill]=\\\"node.data.color\\\"\\n            \\n          />\\n          <svg:text \\n            alignment-baseline=\\\"central\\\"\\n            [attr.x]=\\\"10\\\"\\n            [attr.y]=\\\"node.dimension.height / 2\\\"\\n            onclick=\\\"alert(node.label)\\\"\\n          >\\n            {{ node.label }}\\n          </svg:text>\\n        </svg:g>\\n      </ng-template>\\n  \\n      <ng-template #linkTemplate let-link>\\n        <svg:g class=\\\"edge\\\">\\n          <svg:path\\n            class=\\\"line\\\"\\n            stroke-width=\\\"2\\\"\\n            marker-end=\\\"url(#arrow)\\\"\\n          ></svg:path>\\n          <svg:text class=\\\"edge-label\\\" text-anchor=\\\"middle\\\">\\n            <textPath\\n              class=\\\"text-path\\\"\\n              [attr.href]=\\\"'#' + link.id\\\"\\n              [style.dominant-baseline]=\\\"link.dominantBaseline\\\"\\n              startOffset=\\\"50%\\\"\\n            >\\n              {{ link.label }}\\n            </textPath>\\n          </svg:text>\\n        </svg:g>\\n      </ng-template>\\n    </ngx-graph>\\n        </ion-card-header>\\n        <ion-card-content>\\n          \\n        </ion-card-content>\\n        <ion-row class=\\\"cardfooter\\\">\\n            <ion-col>\\n                  Sunlight\\n            </ion-col>\\n            <ion-col>\\n                <p>All plants use sunlight to make food (sugars) in a process called photosynthesis. They store the food in their leaves and the energy flows to other animals that eat the leaves</p>\\n          </ion-col>\\n          </ion-row>\\n          <ion-row class=\\\"cardfooter\\\">\\n              <ion-col>\\n                    Sunlight\\n              </ion-col>\\n              <ion-col>\\n                  <a href=\\\"https://en.wikipedia.org/wiki/Sunlight\\\">https://en.wikipedia.org/wiki/Sunlight</a>\\n            </ion-col>\\n            </ion-row>\\n            <ion-row class=\\\"cardfooter\\\">\\n                <ion-col>\\n                      <p>Root</p>\\n                </ion-col>\\n                <ion-col>\\n                    <a href=\\\"https://en.wikipedia.org/wiki/Root\\\">https://en.wikipedia.org/wiki/Root</a>\\n              </ion-col>\\n              </ion-row>\\n    </ion-card>\\n    \\n  </ion-content>\\n  \"","import { Edge, Node, ClusterNode } from '@swimlane/ngx-graph';\r\n\r\nexport const nodes: Node[] = [\r\n  {\r\n    id: 'plant',\r\n    label: 'Plant'\r\n  }, {\r\n    id: 'roots',\r\n    label: 'Roots'\r\n  }, {\r\n    id: 'flowers',\r\n    label: 'Flowers'\r\n  }\r\n  , {\r\n    id: 'leaves',\r\n    label: 'Leaves'\r\n  }, {\r\n    id: 'sunlight',\r\n    label: 'Sunlight'\r\n  }\r\n//   , {\r\n//     id: 'othercelestialbodies',\r\n//     label: 'Other Celestial Bodies'\r\n//   }\r\n];\r\n\r\n\r\n\r\nexport const links: Edge[] = [\r\n  \r\n  {\r\n    id: 'a',\r\n    source: 'plant',\r\n    target: 'roots',\r\n    label: 'has'\r\n  }, {\r\n    id: 'b',\r\n    source: 'plant',\r\n    target: 'flowers',\r\n    label: 'has'\r\n  },\r\n  {\r\n    id: 'c',\r\n    source: 'plant',\r\n    target: 'leaves',\r\n    label: 'has'\r\n  },\r\n  {\r\n    id: 'd',\r\n    source: 'plant',\r\n    target: 'sunlight',\r\n    label: 'needs'\r\n  }\r\n];","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PlantsPage } from './plants.page';\nimport { NgxGraphModule } from '@swimlane/ngx-graph';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlantsPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NgxGraphModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [PlantsPage]\n})\nexport class PlantsPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BsYW50cy9wbGFudHMucGFnZS5zY3NzIn0= */\"","import { map } from 'rxjs/operators';\nimport { ConceptMap } from './../interfaces';\nimport { Observable } from 'rxjs';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport {\n  AngularFirestoreModule,\n  AngularFirestore\n} from '@angular/fire/firestore';\nimport { Component, OnInit } from '@angular/core';\n// NGX Graph Support\nimport { nodes, links } from './data';\nimport { Edge, Node, ClusterNode, Layout } from '@swimlane/ngx-graph';\n// import { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-plants',\n  templateUrl: './plants.page.html',\n  styleUrls: ['./plants.page.scss'],\n})\nexport class PlantsPage implements OnInit {\n  nodes: Node[] = nodes;\n  firenode: Node[];\n  firelink: Edge[];\n  conceptMap: ConceptMap = {\n    node: [],\n    edge: []\n  };\n  conceptMapInfo: Observable<any>;\n  // clusters: ClusterNode[] = clusters;\n  links: Edge[] = links;\n  constructor(\n    private _angularFireStore: AngularFirestore,\n    private _angularFireAuth: AngularFireAuth\n  ) {\n\n    console.log('check concepMap', this.conceptMap);\n    console.log('node', this.nodes);\n    console.log('link', this.links);\n    // const db = _angularFireStore\n    //   .collection('ConceptMaps')\n    //   .doc('Plants');\n    // db.ref.get()\n    //   .then((doc) => {\n    //     console.log('ref get', doc.data());\n    //     console.log(JSON.stringify(doc.data()));\n    //     const val = doc.data();\n    //     this.nodes = val.concepts;\n    //     this.links = val.propositions;\n\n    //   });\n    // this.nodes = this.conceptMap.node;\n    // this.links = this.conceptMap.edge;\n  }\n\n  ngOnInit() {\n    console.log(this.conceptMap);\n  }\n\n  setSampleMap() {\n    this.conceptMap.node = nodes;\n    this.conceptMap.edge = links;\n    this._angularFireStore\n      .collection('sampleMap')\n      .doc('solarSystem')\n      .set({\n        node: this.conceptMap.node,\n        edge: this.conceptMap.edge\n      })\n      .then(result => console.info(result))\n      .catch(err => {\n        console.log('Error' + err);\n      });\n  }\n}\n"],"sourceRoot":""}